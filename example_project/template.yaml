AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless website
Globals:
  Function:
    Architectures:
    - arm64
    AutoPublishAlias: live
    Handler: app.handler
    MemorySize: 128
    Runtime: python3.9
    Timeout: 120
Parameters:
  LambdaAccessRole:
    Default: asd
    Type: String
  LambdaExecRole:
    Default: arn:aws:iam::636500095665:role/service-role/LambdaAccessDynamoDB
    Type: String
Resources:
  TestLayer:
    Properties:
      CompatibleRuntimes:
      - provided
      ContentUri: ./layers/TestLayer.zip
      LayerName: TestLayer
    Type: AWS::Serverless::LayerVersion
  pets_CreatePet:
    Properties:
      CodeUri: ./lambdas/pets/CreatePet
      FunctionName: pets_CreatePet
      Role: LambdaExecRole0
    Type: AWS::Serverless::Function
  pets_GetList:
    Properties:
      CodeUri: ./lambdas/pets/GetList
      FunctionName: pets_GetList
      Role: LambdaExecRole0
    Type: AWS::Serverless::Function
  pets_ViewPet:
    Properties:
      CodeUri: ./lambdas/pets/ViewPet
      FunctionName: pets_ViewPet
      Role: LambdaExecRole0
    Type: AWS::Serverless::Function
  petstore:
    Properties:
      DefinitionBody:
        components:
          schemas:
            Error:
              properties:
                code:
                  format: int32
                  type: integer
                message:
                  type: string
              required:
              - code
              - message
              type: object
            Pet:
              properties:
                id:
                  format: int64
                  type: integer
                name:
                  type: string
                tag:
                  type: string
              required:
              - id
              - name
              type: object
            Pets:
              items:
                $ref: '#/components/schemas/Pet'
                x-scope:
                - ''
                - '#/components/schemas/Pets'
              type: array
        info:
          license:
            name: MIT
          title: AWS Petstore with Tomcru
          version: 1.0.0
        openapi: 3.0.0
        paths:
          /pets:
            get:
              operationId: listPets
              parameters:
              - description: How many items to return at one time (max 100)
                in: query
                name: limit
                required: false
                schema:
                  format: int32
                  type: integer
              responses:
                '200':
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pets'
                        x-scope:
                        - ''
                  description: A paged array of pets
                  headers:
                    x-next:
                      description: A link to the next page of responses
                      schema:
                        type: string
                default:
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
                  description: unexpected error
              summary: List all pets
              tags:
              - pets
              x-amazon-apigateway-integration:
                credentials: !Ref LambdaAccessRole0
                httpMethod: POST
                payloadFormatVersion: '2.0'
                timeoutInMillis: 3000
                type: aws_proxy
                uri: !GetAtt pets_GetList.Arn
            post:
              operationId: createPets
              responses:
                '201':
                  description: Null response
                default:
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
                  description: unexpected error
              summary: Create a pet
              tags:
              - pets
              x-amazon-apigateway-integration:
                httpMethod: POST
                payloadFormatVersion: '2.0'
                timeoutInMillis: 3000
                type: aws_proxy
                uri: !GetAtt pets_CreatePet.Arn
          /pets/{petId}:
            get:
              operationId: showPetById
              parameters:
              - description: The id of the pet to retrieve
                in: path
                name: petId
                required: true
                schema:
                  type: string
              responses:
                '200':
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                        x-scope:
                        - ''
                  description: Expected response to a valid request
                default:
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
                  description: unexpected error
              summary: Info for a specific pet
              tags:
              - pets
              x-amazon-apigateway-integration:
                httpMethod: POST
                payloadFormatVersion: '2.0'
                timeoutInMillis: 3000
                type: aws_proxy
                uri: !GetAtt pets_ViewPet.Arn
        servers:
        - url: http://petstore.swagger.io/v1
      StageName: v1
    Type: AWS::Serverless::HttpApi
Transform: AWS::Serverless-2016-10-31
