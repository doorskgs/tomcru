AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless website
Parameters:
  LambdaAccessRole0:
    Type: String
    Default: arn:aws:iam::636500095665:role/APIGatewayAccessLambda
  LambdaAccessRole1:
    Type: String
    Default: asd
  LambdaExecRole:
    Type: String
    Default: arn:aws:iam::636500095665:role/service-role/LambdaAccessDynamoDB
Globals:
  Function:
    AutoPublishAlias: live
    Handler: app.handler
    Runtime: python3.9
    Timeout: 120
    MemorySize: 128
    Architectures:
    - arm64
Resources:
  myapi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      DefinitionBody:
        openapi: 3.0.0
        info:
          version: 1.0.0
          title: myapi
          license:
            name: MIT
        paths:
          /api/v1/test:
            GET:
              operationId: teso:get_GetTest
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !GetAtt 'teso_GetTest.Arn'
                timeoutInMillis: 3000
                payloadFormatVersion: '2.0'
        components:
          securitySchemes:
            DoorsAuth:
              type: apiKey
              name: DoorsAuth
              in: header
              x-amazon-apigateway-authorizer:
                type: request
                identitySource: $request.header.Authorization
                authorizerResultTtlInSeconds: 3600
                authorizerPayloadFormatVersion: 2.0
                enableSimpleResponses: true
                authorizerCredentials: !Ref 'LambdaAccessRole0'
  petstore:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v1
      DefinitionBody:
        openapi: 3.0.0
        info:
          version: 1.0.0
          title: AWS Petstore with Tomcru
          license:
            name: MIT
        servers:
        - url: http://petstore.swagger.io/v1
        paths:
          /pets:
            get:
              summary: List all pets
              operationId: listPets
              tags:
              - pets
              parameters:
              - name: limit
                in: query
                description: How many items to return at one time (max 100)
                required: false
                schema:
                  type: integer
                  format: int32
              responses:
                '200':
                  description: A paged array of pets
                  headers:
                    x-next:
                      description: A link to the next page of responses
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pets'
                        x-scope:
                        - ''
                default:
                  description: unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !GetAtt 'pets_GetList.Arn'
                timeoutInMillis: 3000
                payloadFormatVersion: '2.0'
                credentials: !Ref 'LambdaAccessRole1'
            post:
              summary: Create a pet
              operationId: createPets
              tags:
              - pets
              responses:
                '201':
                  description: Null response
                default:
                  description: unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !GetAtt 'pets_CreatePet.Arn'
                timeoutInMillis: 3000
                payloadFormatVersion: '2.0'
          /pets/{petId}:
            get:
              summary: Info for a specific pet
              operationId: showPetById
              tags:
              - pets
              parameters:
              - name: petId
                in: path
                required: true
                description: The id of the pet to retrieve
                schema:
                  type: string
              responses:
                '200':
                  description: Expected response to a valid request
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Pet'
                        x-scope:
                        - ''
                default:
                  description: unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Error'
                        x-scope:
                        - ''
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !GetAtt 'pets_ViewPet.Arn'
                timeoutInMillis: 3000
                payloadFormatVersion: '2.0'
        components:
          schemas:
            Pet:
              type: object
              required:
              - id
              - name
              properties:
                id:
                  type: integer
                  format: int64
                name:
                  type: string
                tag:
                  type: string
            Pets:
              type: array
              items:
                $ref: '#/components/schemas/Pet'
                x-scope:
                - ''
                - '#/components/schemas/Pets'
            Error:
              type: object
              required:
              - code
              - message
              properties:
                code:
                  type: integer
                  format: int32
                message:
                  type: string
  TestLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: TestLayer
      ContentUri: ./layers/TestLayer.zip
      CompatibleRuntimes:
      - provided
  teso_GetTest:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: teso_GetTest
      CodeUri: ./lambdas/teso/GetTest
      Environment:
        Variables:
          tesomsz: prod_value
      Role: LambdaExecRole0
  pets_GetList:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pets_GetList
      CodeUri: ./lambdas/pets/GetList
      Role: LambdaExecRole0
  pets_CreatePet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pets_CreatePet
      CodeUri: ./lambdas/pets/CreatePet
      Role: LambdaExecRole0
  pets_ViewPet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pets_ViewPet
      CodeUri: ./lambdas/pets/ViewPet
      Role: LambdaExecRole0
